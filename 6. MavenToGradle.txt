//To migrate from maven to gradle 

1. Create a maven based application
mvn archetype:generate -DgroupId=com.example -DartifactId=MyMavenToGradle -DarchetypeArtifactiId=maven-archetype-quickstart -DinteractiveMode=false

2. cd MyMavenToGradle

3. gedit pom.xml

This XML file does not appear to have any style information associated with it. The document tree is shown below.
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
<modelVersion>4.0.0</modelVersion>
<groupId>com.example1</groupId>
<artifactId>MyMavenToGradle</artifactId>
<packaging>jar</packaging>
<version>1.0-SNAPSHOT</version>
<name>MyMavenToGradle</name>
<url>http://maven.apache.org</url>
<!--  Properties: Customize Java version or plugin versions  -->
<properties>
<maven.compiler.source>11</maven.compiler.source>
<maven.compiler.target>11</maven.compiler.target>
</properties>
<dependencies>
<dependency>
<groupId>junit</groupId>
<artifactId>junit</artifactId>
<version>3.8.1</version>
<scope>test</scope>
</dependency>
</dependencies>
<!--  Build: Configuring plugins and build settings  -->
<build>
<plugins>
<!--  Example: Maven Compiler Plugin to compile Java code  -->
<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-compiler-plugin</artifactId>
<version>3.8.1</version>
<configuration>
<source>1.6</source>
<target>1.6</target>
</configuration>
</plugin>
<!--  Example: Maven Surefire Plugin to run tests  -->
<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-surefire-plugin</artifactId>
<version>2.22.2</version>
</plugin>
<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-jar-plugin</artifactId>
<version>3.1.0</version>
<configuration>
<archive>
<manifestEntries>
<Main-Class>com.example1.App</Main-Class>
</manifestEntries>
</archive>
</configuration>
</plugin>
</plugins>
</build>
</project>

4. mvn clean install  // generates a jar file

5. gradle init --type pom.xml   // creates build.gradle same as pom.xml with all the dependencies 

6. tree
├── build.gradle
├── gradle
│   └── wrapper
│       ├── gradle-wrapper.jar
│       └── gradle-wrapper.properties
├── gradlew
├── gradlew.bat
├── pom.xml
├── settings.gradle
├── src
│   ├── main
│   │   └── java
│   │       └── com
│   │           └── example1
│   │               └── App.java


7. gedit build.gradle
//explicitly need to add manifest artifactId to inform the gradle from where to start the execution because in pom.xml we specify the starting point within the plugin

apply plugin: 'java'
apply plugin: 'maven'

group = 'com.example1'
version = '1.0-SNAPSHOT'

description = """MyMavenToGradle"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
        
     maven { url "https://repo.maven.apache.org/maven2" }
}
dependencies {
    testCompile group: 'junit', name: 'junit', version:'3.8.1'
}

jar {
    manifest {
        attributes(
            'Main-Class': 'com.example1.App'
        )
    }
}

8. gradle build

9. //run the jar file generated by generated available at build/libs/*.jar

java -jar build/libs/MyMavenToGradle-1.0-SNAPSHOT.jar
Hello World






