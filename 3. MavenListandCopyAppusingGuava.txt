 /***********creating a maven based application to display list and copy content from source file to destination file using Guava dependency
1. open terminal and type
mvn archetype:generate -DgroupId=com.example -DartifactId=MyMavenGuavaApp -DarchetypeArtifactiId=maven-archetype-quickstart -DinteractiveMode=false
2. get into the directory
cd MyMavenGuavaApp /MyMAvenGuavaApp/gedit pom.xml
// add dependencies from maven central repository
goto chrome --> maven central repository --> search for a particular dependency --> type guava--> it shows the dependency --> scroll up --> click on the recent version and copy the dependency available and also search for commons-io and paste it in pom.xml under dependencies tag
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
<modelVersion>4.0.0</modelVersion> <groupId>com.example</groupId> <artifactId>MyMavenGuavaApp</artifactId> <packaging>jar</packaging> <version>1.0-SNAPSHOT</version> <name>MyMavenGuavaApp</name> <url>http://maven.apache.org</url> <dependencies>
<dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> <version>3.8.1</version> <scope>test</scope>
</dependency>
<!-- https://mvnrepository.com/artifact/com.google.guava/guava --> <dependency>
<groupId>com.google.guava</groupId> <artifactId>guava</artifactId> <version>33.4.0-jre</version>
</dependency>

 <!-- https://mvnrepository.com/artifact/commons-io/commons-io --> <dependency>
<groupId>commons-io</groupId> <artifactId>commons-io</artifactId> <version>2.18.0</version>
</dependency>
</dependencies>
<!-- Build: Configuring plugins and build settings -->
<build>
<plugins>
<!-- Example: Maven Compiler Plugin to compile Java code --> <plugin>
<groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> <version>3.8.1</version>
<configuration>
<source>1.7</source> <target>1.7</target> </configuration> </plugin>
<!-- Example: Maven Surefire Plugin to run tests --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> <version>2.22.2</version>
</plugin>
<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jar-plugin</artifactId> <version>3.1.0</version>
<configuration>
<archive> <manifestEntries>
<Main-Class>com.example.App</Main-Class> </manifestEntries>
</archive> </configuration>

 </plugin>
</plugins> </build> </project>
3. edit the App.java file which is available at /src/main/java/com/example
package com.example;
/**
* Hello world! *
*/
import org.apache.commons.io.FileUtils;
import java.io.File;
import java.io.IOException;
import com.google.common.collect.ImmutableList; public class App
{
public static void main( String[] args ) {
ImmutableList<String> fruits = ImmutableList.of("Apple", "Banana", "Cherry"); System.out.println(fruits);
// Define source and destination files
File sourceFile = new File("source.txt"); File destFile = new File("destination.txt");
try {
// Copy file using Apache Commons IO FileUtils.copyFile(sourceFile, destFile); System.out.println("File copied successfully!");
} catch (IOException e) {
System.err.println("Error occurred while copying file: " + e.getMessage());
}
} }

 3. mvn clean install
4. java -jar target/MyMaven.....jar // if it gives error saying class not found, execute the below command
5. mvn
[INFO]
[INFO]
[INFO]
[INFO]
[INFO]
[INFO]
[INFO]
[Apple, Banana, Cherry]
File copied successfully!
[INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------ [INFO] Total time: 2.198 s
[INFO] Finished at: 2025-03-28T16:12:33+05:30
[INFO] ------------------------------------------------------------------------
// we can see the list created as [Apple, Banana, Cherry] at line number 133 and also file copied successfully
6. hemavathi@hemavathi-VirtualBox:~/MyMavenGuavaApp$ cat destination.txt This is a file created using common io dependency
exec:java -Dexec.mainClass="com.example.App" Scanning for projects...
--------------------< com.example:MyMavenGuavaApp >--------------------- Building MyMavenGuavaApp 1.0-SNAPSHOT --------------------------------[ jar ]---------------------------------
--- exec-maven-plugin:3.5.0:java (default-cli) @ MyMavenGuavaApp ---
